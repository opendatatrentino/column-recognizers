# This is a column recognizer specification file.
#
# It can include comment lines, blank lines, and specification lines.
#
# Comment lines start with the hash symbol.
#
# Specification lines consist of 
# 	<recognizer_name> <conceptID> <type> <model_string>
#
# where <type> can be any of:
# 	REGEX, REGEX_S, HEADER_REGEX, VALUE_SET, TF_IDF, SVM, HEADER, SUM_THRESHOLD, ONE_BEST
#
# The model string differs depending on the type of recognizer:
#
# Type			Model string
# REGEX 		regular expression
# REGEX_S 		regular expression (case sensitive)
# HEADER_REGEX	regular expression (case sensitive)
# VALUE_SET 	model file path
# TF_IDF 		model file path
# SVM			model file path; component recognizer name, ...
# SUM_THRESHOLD	threshold value
# HEADER		none
# ONE_BEST		none
#
# Each specification line produces a column recognizer. 
#

# Restaurant
it_restaurant_regex		22500	REGEX			((trattoria)|(ristorante)|(hosteria)|(ost[ae]ria)|(pizzeria)) [a-z]+

# Street address
# The regex assumes that the column separator is in [;,] or the null character
it_street_address_regex	45803	REGEX			((via)|(viale)|(piazza)|(piazzetta)) [ a-z]+\s*[;,\x00]?[0-9]+

# Town (comune)
comune_set				46431	VALUE_SET		comune.txt

# Frazione
frazione_set			72963	VALUE_SET		frazione.txt

# Restaurant
#it_restaurant_tfidf		22500 	TF_IDF			it_restaurant_tfidf.txt

# Restaurant
#two_features_osterie	22500	SVM				svm-two_features_osterie/svm-model-two_features_osterie; it_restaurant_tfidf
#restaurant_2cr_osterie	22500	SVM				svm-restaurant_2cr_osterie/svm-model-restaurant_2cr_osterie; it_restaurant_tfidf, it_restaurant_regex

# Comune
#comune_2cr_osterie		4001	SVM				svm-comune_2cr_osterie/svm-model-comune_2cr_osterie; comune_set, frazione_set

# Orari
orari_24h_regex			80505	REGEX			([01]?[0-9]|2[0-3])[.:][0-5][0-9]\s*-\s*([01]?[0-9]|2[0-3])[.:][0-5][0-9]

# Class - headers like TypeEn or TypeIt represent the 'class' concept
class_header_regex		43482	HEADER_REGEX	1; [Tt]ype[A-Z]([A-Z]|[a-z])

# Italian protected product name
#prodotto_protetto_regex	6001	REGEX			((DOP)|(IGP)|(STP))\s+[A-Z]
#prodotto_protetto_regex	6001	REGEX			DOP\s+[A-Z][A-Za-z ]*
prodotto_protetto_regex	2		REGEX_S			((DOP)|(IGP)|(STG)) [A-Z][A-Za-z ]*

# Product characteristics
prod_charatteristiche_tfidf		3 	TF_IDF	prodotti_caratteristiche_tfidf.txt

# Product 'riferimenti'
prod_riferimenti_tfidf		120794 	TF_IDF	prodotti_riferimenti_tfidf.txt

# Product production zone
prod_zona_tfidf				120792 	TF_IDF	prodotti_zona_tfidf.txt

# Consortium 
conzortio_regex				44543	REGEX		consorzio .*

# Consortium 
conzortio_header_regex		44543	HEADER_REGEX		1; [Cc]onsorzio

# URL
url_regex				34123	REGEX_S			http\://[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(/\S*)?

# Get concept IDs from column headers
header_nlp					0	HEADER_NLP

# Combine the evidence by summing and thresholding
#sum_threshold			0		SUM_THRESHOLD	0.1

# Retain the one best candidate for each column
one_best				0		ONE_BEST		

